---
import ProjectsGrid from "@components/ProjectsGrid.astro";
import SelectableTag from "@components/SelectableTag.astro";
import Layout from "@layout/Layout.astro";

// Get all project markdown files
let allProjects = await Astro.glob("./*.md");

// Sort by year (newest first)
allProjects = allProjects.sort((a, b) => {
  let yearA = parseInt(a.frontmatter.year || "0"),
    yearB = parseInt(b.frontmatter.year || "0");
  if (yearA < yearB) return 1;
  if (yearA > yearB) return -1;
  return 0;
});

// Get all unique technologies for filtering
const technologies = [
  ...new Set(
    allProjects
      .map((project) => project.frontmatter.technologies)
      .flat()
      .filter(Boolean)
      .sort()
  ),
];

// Transform the projects to match the ProjectsGrid interface
const projects = allProjects.map(project => ({
  name: project.frontmatter.title,
  description: project.frontmatter.description,
  link: project.url || `/projects/${project.file.split('/').pop()?.replace('.md', '')}`,
  img: project.frontmatter.image,
  technologies: project.frontmatter.technologies || []
}));
---

<Layout
  pageTitle="Projects"
  description="Things I've built for both work and pleasure, ljubinkovicdj93"
  type="content"
>
  <main class="px-8 pt-16 mx-auto max-w-6xl sm:pt-24 lg:px-16">
    <div class="flex flex-col mt-4 space-y-8">
      <div class="flex flex-col space-y-4">
        <h1
          class="text-4xl font-bold tracking-tighter sm:text-5xl max-w-[25ch]"
        >
          Project portfolio
        </h1>
        <p class="text-primary-300 max-w-[65ch]">
          <strong>Talk is cheap, show me the code!</strong>
        </p>

        <p class="text-primary-300 max-w-[65ch]">
          Here are the projects I've built over the years, both for work and for fun.
        </p>
        <h2
          class="text-3xl font-bold tracking-tighter sm:text-4xl max-w-[25ch]"
        >
          Filter by tags:
        </h2>
      </div>
      <div class="mb-8">
        <ul class="flex flex-row flex-wrap gap-2">
          {technologies.map((tech) => <SelectableTag name={tech} />)}
        </ul>
      </div>
      <ProjectsGrid projects={projects} />
    </div>
  </main>
</Layout>

<script define:vars={{ technologies }}>
  let projectCards = document.querySelectorAll("div[data-technologies]");
  let filters = document.querySelectorAll("input");

  let techMap = Object.assign(...technologies.map((t) => ({ [t]: false })));

  for (const filter of filters) {
    filter.addEventListener("change", (e) => {
      let isChecked = e.target.checked;
      let name = filter.name;
      techMap[name] = isChecked;

      toggleVisibility();
    });
  }

  function toggleVisibility() {
    let checkedTechs = Object.keys(techMap).filter((t) => techMap[t] === true);

    for (const projectCard of projectCards) {
      let technologies = projectCard.dataset.technologies ? projectCard.dataset.technologies.split(",") : [];

      if (checkedTechs.length === 0 || checkedTechs.every((t) => technologies.includes(t))) {
        projectCard.style.display = "block";
      } else {
        projectCard.style.display = "none";
      }
    }
  }
</script>
